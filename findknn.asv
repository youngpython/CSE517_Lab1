function [indices,dists]=findknn(xTr,xTe,k);
% function [indices,dists]=findknn(xTr,xTe,k);
%
% Finds the k nearest neighbors of xTe in xTr.
%
% Input:
% xTr = dxn input matrix with n column-vectors of dimensionality d
% xTe = dxm input matrix with m column-vectors of dimensionality d
% k = number of nearest neighbors to be found
% 
% Output:
% indices = kxm matrix of where indices(i,j) is the i^th nn of xTe(:,j)
% dists = Euclidean distances to the respective nearest neighbors
%

%%
%Go through each column of testing data
%{
alldists = l2distance(xTr, xTe);
%sort distances from smallest to largest
all_dists_sorted = sort(alldists, 1, 'ascend');
%create k by m matrix of nearest neighbor distances
dists = all_dists_sorted(1:k, :);
%extract largest nearest neighbor dist for each column of testing data
largest_possible_distance = dists(k,:);
%indices = alldists(:,find(alldists <= largest_possible_distance));
indices = find(alldists <= largest_possible_distance);
indices = (alldists <= largest_possible_distance)(:)
find(alldists(:,:)==dists(:,:));
%}

%{
%alldistsandindices = cellfun(@(x) , alldists
%all_dists = sort(l2distance(xTr, xTe), 1, 'ascend');
%dists = all_dists(1:k, :);
%indices = zeros(k, width(xTe))
%}

alldists = l2distance(xTr, xTe);
alldistssorted = sort(l2distance(xTr, xTe), 1, 'ascend');
indices = 

%When we're at column i, find the distances from column i to each 
%column in training data
%Figure out the k smallest distances, and these will be the columns
%returned, in increasing order down the outputted matrix
	
%%	%
	
